name: Deploy AWS Cloud Infrastructure
on: 
  push:
    paths:
      - terraform/*
      - .github/workflows/deploy_infra_app.yaml

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  TF_VAR_vpc_id: ${{ secrets.AWS_VPC_ID }}
  K8S_CLUSTER_NAME: k8s-cluster

jobs:
  # Job to deploy the infrastructure using Terraform
  deploy-infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: tf init
        run: terraform init

      - name: tf validate
        run: terraform validate

      - name: tf plan
        run: terraform plan -no-color

      - name: tf apply
        if: github.ref_name == 'main'
        run: terraform apply -auto-approve -no-color

  deploy-app:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: helm
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate kubeconfig
        run: aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $K8S_CLUSTER_NAME
      
      - name: Deploy app 
        run: helm install -f values.yaml --set image.branchName=${{ github.ref_name }} k8s-app .

      - name: Set API_URL
        run: echo "API_URL=${kubectl -n demo get svc k8s-app-service -o jsonpath='{.status.loadBalancer.ingress[*].hostname}}" >> $GITHUB_ENV

      - name: Run k6 tests (perf/automated)
        uses: k6io/action@v0.1
        with:
          filename: ../tests/script.js

  destroy-infrastructure:
    needs: deploy-app
    if: ${{ always() }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: tf init
        run: terraform init

      - name: tf validate
        run: terraform validate

      - name: tf destroy
        if: github.ref_name == 'main'
        run: terraform destroy -auto-approve -no-color